// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: purekitV3_crypto.proto

#include "purekitV3_crypto.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace build {
class EnrollmentRecordDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EnrollmentRecord> _instance;
} _EnrollmentRecord_default_instance_;
}  // namespace build
static void InitDefaultsscc_info_EnrollmentRecord_purekitV3_5fcrypto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::build::_EnrollmentRecord_default_instance_;
    new (ptr) ::build::EnrollmentRecord();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::build::EnrollmentRecord::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EnrollmentRecord_purekitV3_5fcrypto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EnrollmentRecord_purekitV3_5fcrypto_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_purekitV3_5fcrypto_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_purekitV3_5fcrypto_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_purekitV3_5fcrypto_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_purekitV3_5fcrypto_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::EnrollmentRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::EnrollmentRecord, ns_),
  PROTOBUF_FIELD_OFFSET(::build::EnrollmentRecord, nc_),
  PROTOBUF_FIELD_OFFSET(::build::EnrollmentRecord, t0_),
  PROTOBUF_FIELD_OFFSET(::build::EnrollmentRecord, t1_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::build::EnrollmentRecord)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::_EnrollmentRecord_default_instance_),
};

const char descriptor_table_protodef_purekitV3_5fcrypto_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\026purekitV3_crypto.proto\022\005build\"B\n\020Enrol"
  "lmentRecord\022\n\n\002ns\030\001 \001(\014\022\n\n\002nc\030\002 \001(\014\022\n\n\002t"
  "0\030\003 \001(\014\022\n\n\002t1\030\004 \001(\014BB\n)com.virgilsecurit"
  "y.purekit.protobuf.buildB\025PurekitProtosV"
  "3Cryptob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_purekitV3_5fcrypto_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_purekitV3_5fcrypto_2eproto_sccs[1] = {
  &scc_info_EnrollmentRecord_purekitV3_5fcrypto_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_purekitV3_5fcrypto_2eproto_once;
static bool descriptor_table_purekitV3_5fcrypto_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_purekitV3_5fcrypto_2eproto = {
  &descriptor_table_purekitV3_5fcrypto_2eproto_initialized, descriptor_table_protodef_purekitV3_5fcrypto_2eproto, "purekitV3_crypto.proto", 175,
  &descriptor_table_purekitV3_5fcrypto_2eproto_once, descriptor_table_purekitV3_5fcrypto_2eproto_sccs, descriptor_table_purekitV3_5fcrypto_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_purekitV3_5fcrypto_2eproto::offsets,
  file_level_metadata_purekitV3_5fcrypto_2eproto, 1, file_level_enum_descriptors_purekitV3_5fcrypto_2eproto, file_level_service_descriptors_purekitV3_5fcrypto_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_purekitV3_5fcrypto_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_purekitV3_5fcrypto_2eproto), true);
namespace build {

// ===================================================================

void EnrollmentRecord::InitAsDefaultInstance() {
}
class EnrollmentRecord::_Internal {
 public:
};

EnrollmentRecord::EnrollmentRecord()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:build.EnrollmentRecord)
}
EnrollmentRecord::EnrollmentRecord(const EnrollmentRecord& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ns_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ns().empty()) {
    ns_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.ns_);
  }
  nc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nc().empty()) {
    nc_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.nc_);
  }
  t0_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_t0().empty()) {
    t0_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.t0_);
  }
  t1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_t1().empty()) {
    t1_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.t1_);
  }
  // @@protoc_insertion_point(copy_constructor:build.EnrollmentRecord)
}

void EnrollmentRecord::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EnrollmentRecord_purekitV3_5fcrypto_2eproto.base);
  ns_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  t0_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  t1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

EnrollmentRecord::~EnrollmentRecord() {
  // @@protoc_insertion_point(destructor:build.EnrollmentRecord)
  SharedDtor();
}

void EnrollmentRecord::SharedDtor() {
  ns_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  t0_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  t1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EnrollmentRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EnrollmentRecord& EnrollmentRecord::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EnrollmentRecord_purekitV3_5fcrypto_2eproto.base);
  return *internal_default_instance();
}


void EnrollmentRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:build.EnrollmentRecord)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ns_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nc_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  t0_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  t1_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* EnrollmentRecord::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes ns = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_ns();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes nc = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_nc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes t0 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_t0();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes t1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_t1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EnrollmentRecord::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.EnrollmentRecord)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes ns = 1;
  if (this->ns().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_ns(), target);
  }

  // bytes nc = 2;
  if (this->nc().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_nc(), target);
  }

  // bytes t0 = 3;
  if (this->t0().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_t0(), target);
  }

  // bytes t1 = 4;
  if (this->t1().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_t1(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.EnrollmentRecord)
  return target;
}

size_t EnrollmentRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.EnrollmentRecord)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes ns = 1;
  if (this->ns().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_ns());
  }

  // bytes nc = 2;
  if (this->nc().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_nc());
  }

  // bytes t0 = 3;
  if (this->t0().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_t0());
  }

  // bytes t1 = 4;
  if (this->t1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_t1());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnrollmentRecord::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.EnrollmentRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const EnrollmentRecord* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EnrollmentRecord>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.EnrollmentRecord)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.EnrollmentRecord)
    MergeFrom(*source);
  }
}

void EnrollmentRecord::MergeFrom(const EnrollmentRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.EnrollmentRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ns().size() > 0) {

    ns_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.ns_);
  }
  if (from.nc().size() > 0) {

    nc_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.nc_);
  }
  if (from.t0().size() > 0) {

    t0_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.t0_);
  }
  if (from.t1().size() > 0) {

    t1_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.t1_);
  }
}

void EnrollmentRecord::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.EnrollmentRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnrollmentRecord::CopyFrom(const EnrollmentRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.EnrollmentRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnrollmentRecord::IsInitialized() const {
  return true;
}

void EnrollmentRecord::InternalSwap(EnrollmentRecord* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  ns_.Swap(&other->ns_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nc_.Swap(&other->nc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  t0_.Swap(&other->t0_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  t1_.Swap(&other->t1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata EnrollmentRecord::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace build
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::build::EnrollmentRecord* Arena::CreateMaybeMessage< ::build::EnrollmentRecord >(Arena* arena) {
  return Arena::CreateInternal< ::build::EnrollmentRecord >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
